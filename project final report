import matplotlib.pyplot as plt
import matplotlib.dates as mdates
from datetime import datetime

class CRMImplementationProject:
    def __init__(self):
        self.project_title = "CRM Implementation for Customer Engagement and Operational Efficiency"
        self.timeline = {
            "start_date": "2025-02-15",
            "end_date": "2025-06-10"
        }
        self.total_budget = 45000
        self.actual_cost = 45000
        self.budget_breakdown = {
            "CRM Software License": 20000,
            "Integration & Customization": 15000,
            "Support & Training": 10000
        }
        self.status = "Completed Ahead of Schedule"

    def display_budget_summary(self):
        print("=== Project Budget Summary ===")
        for item, cost in self.budget_breakdown.items():
            print(f"{item}: ${cost}")
        print(f"Total Budget: ${self.total_budget}\n")

    def generate_gantt_chart(self):
        phases = [
            ("Planning & Customization", "2025-02-15", "2025-03-31"),
            ("Integration & Training", "2025-04-01", "2025-05-15"),
            ("Optimization & Go-Live", "2025-05-16", "2025-06-10")
        ]

        start_dates = [datetime.strptime(p[1], "%Y-%m-%d") for p in phases]
        end_dates = [datetime.strptime(p[2], "%Y-%m-%d") for p in phases]
        durations = [(end - start).days for start, end in zip(start_dates, end_dates)]

        fig, ax = plt.subplots(figsize=(10, 4))
        for i, (phase, start, duration) in enumerate(zip([p[0] for p in phases], start_dates, durations)):
            ax.barh(phase, duration, left=start, height=0.6)

        ax.set_title("CRM Implementation Project Gantt Chart")
        ax.set_xlabel("Timeline")
        ax.set_ylabel("Project Phases")
        ax.xaxis.set_major_locator(mdates.MonthLocator())
        ax.xaxis.set_major_formatter(mdates.DateFormatter('%b %d, %Y'))
        plt.xticks(rotation=45)
        plt.tight_layout()

        plt.savefig("CRM_Project_Gantt_Chart.png")
        print("Gantt chart saved as 'CRM_Project_Gantt_Chart.png'\n")

    def run(self):
        print(f"\nProject Title: {self.project_title}")
        print(f"Timeline: {self.timeline['start_date']} to {self.timeline['end_date']}")
        print(f"Status: {self.status}\n")
        self.display_budget_summary()
        self.generate_gantt_chart()

# Run the project summary and visualization
dashboard = CRMImplementationProject()
dashboard.run()
